name: Push Docker image with Trivy scan results

on:
  workflow_call:
    secrets:
      DOCKERHUB_USERNAME:
        required: true
      DOCKERHUB_TOKEN:
        required: true

jobs:
  push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: https://index.docker.io/v1/
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Build Docker image
      - name: Build Docker image
        id: build
        run: |
          docker build -t laravel_app:latest .
          docker save laravel_app:latest -o vuln-image.tar

      # Download Trivy HTML template
      - name: Download Trivy HTML template
        run: |
          curl -L https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/html.tpl -o html.tpl

      - name: create results folder
        run:
          mkdir results/

      # Run Trivy vulnerability scanner in tarball mode
      - name: Run Trivy vulnerability scanner
        id: trivy
        uses: aquasecurity/trivy-action@0.20.0
        with:
          input: vuln-image.tar
          severity: 'CRITICAL,HIGH'
          format: 'template'
          template: '@html.tpl'
          output: 'results/report.html'

      # Check Trivy scan result
      - name: Check Trivy scan result
        if: steps.trivy.outputs.exit-code != 0
        run: |
          echo "Trivy scan failed with CRITICAL or HIGH vulnerabilities."
          exit 1

      # Upload Trivy scan results
      - name: Upload scan results
        uses: actions/upload-artifact@v2
        with:
          name: trivy-scan-results
          path: results/

      # # Post Trivy scan results to PR
      # - name: Post Trivy scan results to PR
      #   uses: actions/github-script@v6
      #   if: steps.trivy.outputs.exit-code == 0
      #   with:
      #     script: |
      #       const fs = require('fs');
      #       const report = fs.readFileSync('results/report.html', 'utf8');
      #       github.rest.issues.createComment({
      #         ...context.repo,
      #         issue_number: context.issue.number,
      #         body: `Trivy Scan Results:\n\n${report}`
      #       });
      
      - name: Generate report URL
        id: generate-url
        run: |
          echo "report_url=https://github.com/${{ github.repository }}/suites/${{ github.run_id }}/artifacts/" >> $GITHUB_ENV

      - name: Post Trivy report URL as PR comment
        uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        with:
          script: |
            const reportUrl = process.env.report_url;
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: `Trivy scan completed. [View the report](${reportUrl})`
            });

      # Build and push Docker image if Trivy scan passed
      - name: Build and push Docker image
        if: steps.trivy.outputs.exit-code == 0
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/laravel-app:latest .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/laravel-app:latest

